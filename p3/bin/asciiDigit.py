
class AsciiDigit():
	
	def __init__(self):
		self.digitDict = {
			'0' : (
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
				),

			'1' : (
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
				),

			'2' : (
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', '.',
					'x', '.', '.', '.', '.',
					'x', 'x', 'x', 'x', 'x',
				),

			'3' : (
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
				),

			'4' : (
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
				),

			'5' : (
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', '.',
					'x', '.', '.', '.', '.',
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
				),

			'6' : (
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', '.',
					'x', '.', '.', '.', '.',
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
				
				),

			'7' : (
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
				),

			'8' : (
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
				),

			'9' : (
					'x', 'x', 'x', 'x', 'x',
					'x', '.', '.', '.', 'x',
					'x', '.', '.', '.', 'x',
					'x', 'x', 'x', 'x', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
					'.', '.', '.', '.', 'x',
				),

			'+' : (
					'.', '.', '.', '.', '.',
					'.', '.', 'x', '.', '.',
					'.', '.', 'x', '.', '.',
					'x', 'x', 'x', 'x', 'x',
					'.', '.', 'x', '.', '.',
					'.', '.', 'x', '.', '.',
					'.', '.', '.', '.', '.',
				)
			}

	def digitToChar(self, digit):
		digitString = ''.join(digit)
		returnChar = ''

		for k,v in self.digitDict.items():
			strVal = ''.join(v)
			if digitString == strVal:
				returnChar = k
				break

		return returnChar

	def charToDigit(self, char):
		returnVal = []

		for k,v in self.digitDict.items():
			if k == char:
				returnVal = v
				break	
		return returnVal
